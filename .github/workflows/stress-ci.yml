name: Stress App CI/CD

on:
  push:
    paths:
      - 'stress/**'
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if VERSION file changed
        id: check
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^stress/VERSION$"; then
            echo "VERSION file changed, should build"
            echo "should-build=true" >> $GITHUB_OUTPUT
          else
            echo "VERSION file not changed, skipping build"
            echo "should-build=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-version-change
    if: needs.check-version-change.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read version
        id: version
        run: |
          if [ -f "stress/VERSION" ]; then
            VERSION=$(cat stress/VERSION | tr -d '\n\r' | xargs)
            if [ -z "$VERSION" ]; then
              VERSION="latest"
            fi
          else
            VERSION="latest"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building stress app with version: $VERSION"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/stress
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./stress
          file: ./stress/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
